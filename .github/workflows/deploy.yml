name: Deploy Lambda Layer

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Build and Deploy Lambda Layer
    runs-on: ubuntu-latest

    env:
      LAYER_NAME: dary-application-lambda-layer
      PYTHON_VERSION: 3.13

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          mkdir -p layer/python
          pip install -r lambda_layer/requirements.txt -t layer/python
          cp lambda_layer/*.py layer/python/

      - name: Zip layer content
        run: |
          cd layer
          zip -r ../layer.zip python
          cd ..

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Publish new Lambda Layer version
        id: publish_layer
        run: |
          LAYER_VERSION=$(aws lambda publish-layer-version \
            --layer-name $LAYER_NAME \
            --zip-file fileb://layer.zip \
            --compatible-runtimes python${PYTHON_VERSION} \
            --region ${{ secrets.AWS_REGION }} \
            --query 'Version' --output text)
          echo "LAYER_VERSION=$LAYER_VERSION" >> $GITHUB_ENV

      - name: Update all Lambdas using this layer
        run: |
          FUNCTIONS=$(aws lambda list-functions --query 'Functions[].FunctionName' --output text)

          for FUNCTION_NAME in $FUNCTIONS; do
            LAYERS=$(aws lambda get-function-configuration --function-name $FUNCTION_NAME --query 'Layers[].Arn' --output text)

            if echo "$LAYERS" | grep -q "$LAYER_NAME"; then
              echo "Updating $FUNCTION_NAME to use new layer version $LAYER_VERSION"

              # Remove old layer ARN, replace with new version
              NEW_LAYERS=$(echo "$LAYERS" | sed "s|\(.*\):[0-9]*|\1:$LAYER_VERSION|g")

              aws lambda update-function-configuration \
                --function-name "$FUNCTION_NAME" \
                --layers $NEW_LAYERS
            fi
          done

      - name: Update Lambda function code
        run: |
          FUNCTIONS=("dary-application-lambda-get-handler" "dary-application-lambda-delete-handler" "dary-application-lambda-patch-handler" "dary-application-lambda-post-handler")
          for FUNCTION_NAME in "${FUNCTIONS[@]}"; do
            echo "Packaging $FUNCTION_NAME..."
            cd "${GITHUB_WORKSPACE}/lambda_functions/${FUNCTION_NAME}"
            pwd
            
            zip -r ${FUNCTION_NAME}.zip .
          
            ls -la

            echo "Updating code for $FUNCTION_NAME..."
            aws lambda update-function-code \
              --function-name $FUNCTION_NAME \
              --zip-file fileb://${FUNCTION_NAME}.zip \
              --region ${{ secrets.AWS_REGION }}
          done
